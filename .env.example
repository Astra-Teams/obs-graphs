# --- API Settings ---
PROJECT_NAME=obs-graph
OBS_GRAPHS_DEBUG_MODE=true
OBS_GRAPHS_API_SECRET_KEY=change-me-in-production
HOST_BIND_IP=127.0.0.1
NUM_OF_UVICORN_WORKERS=1
HOST_PORT=8000
DEV_PORT=8001
TEST_PORT=8002

# --- Service Toggles ---
USE_SQLITE=true
USE_MOCK_GITHUB=true
USE_MOCK_LLM=true
USE_MOCK_REDIS=true
# Always leave enabled for automated tests; set to false only when a live
# ollama-deep-researcher API is available.
USE_MOCK_OLLAMA_DEEP_RESEARCHER=true

# --- LLM Settings ---
# OBS_GRAPHS_OLLAMA_MODEL=llama3.2:3b
OBS_GRAPHS_OLLAMA_MODEL=tinyllama:1.1b
OLLAMA_HOST=
# OLLAMA_HOST="http://host.docker.internal:11434/"

# --- Research Service Configuration ---
# Research API endpoint (development default uses in-network alias; production should use external URL)
RESEARCH_API_URL=http://research-api:8000/research
RESEARCH_API_TIMEOUT_SECONDS=300.0

# Research service Ollama model (used when running the real research service)
# RESEARCH_API_OLLAMA_MODEL=llama3.2:3b
RESEARCH_API_OLLAMA_MODEL=tinyllama:1.1b

# Optional API keys for research service integrations

# --- Database Settings ---
POSTGRES_IMAGE=postgres:16-alpine
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_HOST_DB=obs-graph-prod
POSTGRES_DEV_DB=obs-graph-dev
POSTGRES_TEST_DB=obs-graph-test

# --- Redis Settings ---
OBS_GRAPHS_REDIS_HOST=redis
OBS_GRAPHS_REDIS_PORT=6379
OBS_GRAPHS_CELERY_BROKER_URL=redis://redis:6379/0
OBS_GRAPHS_CELERY_RESULT_BACKEND=redis://redis:6379/0

# --- GitHub Integration ---
OBSIDIAN_VAULT_GITHUB_TOKEN=
OBSIDIAN_VAULT_REPOSITORY=your-github-username/your-obsidian-repo
VAULT_SUBMODULE_PATH=submodules/obsidian-vault
VAULT_GITHUB_API_TIMEOUT_SECONDS=30

# --- Workflow Settings ---
WORKFLOW_DEFAULT_BRANCH=main
WORKFLOW_TEMP_DIR_CLEANUP_SECONDS=86400
CROSS_REFERENCE_MIN_SHARED_KEYWORDS=2
MAX_NEW_ARTICLES_PER_RUN=3
API_MAX_PAGE_SIZE=100
